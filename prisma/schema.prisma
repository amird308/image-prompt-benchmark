// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Batch {
  id                  String           @id @default(cuid())
  name                String?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  status              BatchStatus      @default(PENDING)
  imageCountPerPrompt Int              @default(1)
  prompts             Prompt[]
  referenceImages     ReferenceImage[]
}

model Prompt {
  id              String           @id @default(cuid())
  text            String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  batch           Batch            @relation(fields: [batchId], references: [id], onDelete: Cascade)
  batchId         String
  generatedImages GeneratedImage[]
}

model GeneratedImage {
  id        String   @id @default(cuid())
  url       String
  storageKey String
  createdAt DateTime @default(now())
  prompt    Prompt   @relation(fields: [promptId], references: [id], onDelete: Cascade)
  promptId  String
}

model ReferenceImage {
  id         String   @id @default(cuid())
  url        String
  storageKey String   @unique
  mimeType   String
  createdAt  DateTime @default(now())
  batches    Batch[]
}

enum BatchStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}
